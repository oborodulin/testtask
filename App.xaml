<Application x:Class="TestTask.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TestTask"
             xmlns:Converters="clr-namespace:TestTask.Converters"
             xmlns:DataModels="clr-namespace:TestTask.Classes.DataModels"
             xmlns:ViewModels="clr-namespace:TestTask.Classes.ViewModels"
             xmlns:Views="clr-namespace:TestTask.Classes.Views"
             xmlns:ViewModelLocators="clr-namespace:TestTask.Classes.Views.ViewModelLocators"
             x:Name="App"
             Startup="App_Startup"
             DispatcherUnhandledException="Failure">
    <!--StartupUri="MainWindow.xaml"-->
    <Application.Resources>
        <ResourceDictionary>
            <!--ViewModelLocator -->
            <ViewModelLocators:ViewModelLocator x:Key="ViewModelLocator" />

            <!--Common Converters-->
            <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Converters:BoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" IsInverted="True" />
            <Converters:EnumToVisibilityConverter x:Key="InvertedEnumToVisibilityConverter" IsInverted="True" />
            <Converters:EnumToDescriptionStringConverter x:Key="EnumToDescriptionStringConverter" />

            <!--ViewModel Mappings
            <DataTemplate DataType="{x:Type ViewModels:StartViewModel}">
                <Views:StartView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModels:DepartmentsViewModel}">
                <Views:DepartmentsView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModels:DepartmentViewModel}">
                <Views:DepartmentView/>
            </DataTemplate>-->

            <!--Colors-->
            <Color x:Key="TransparentWhiteColor">#7FFFFFFF</Color>
            <Color x:Key="TransparentBlackColor">#7F000000</Color>
            <Color x:Key="ReadOnlyColor">#FF585858</Color>
            <Color x:Key="PacktOrangeColor">#FFF36F25</Color>
            <Color x:Key="PacktBlackColor">#FF34383B</Color>

            <!--Brushes-->
            <SolidColorBrush x:Key="TransparentWhite" Color="{StaticResource TransparentWhiteColor}" />
            <SolidColorBrush x:Key="VeryTransparentWhite" Color="#3FFFFFFF" />
            <SolidColorBrush x:Key="TransparentBlack" Color="{StaticResource TransparentBlackColor}" />
            <SolidColorBrush x:Key="VeryTransparentBlack" Color="#3F000000" />
            <SolidColorBrush x:Key="Brush" Color="Green" />
            <SolidColorBrush x:Key="PacktOrange" Color="{StaticResource PacktOrangeColor}" />
            <SolidColorBrush x:Key="PacktBlack" Color="{StaticResource PacktBlackColor}" />

            <!--Chapter 1-->
            <Style x:Key="ImageInButtonStyle" TargetType="{x:Type Image}">
                <Setter Property="Opacity" Value="1.0" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, FallbackValue=False}" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--Chapter 10-->
            <Style x:Key="SmallImageInButtonStyle" TargetType="{x:Type Image}" BasedOn="{StaticResource ImageInButtonStyle}">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
